// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
const express = require('express');
const router = express.Router();
const fs = require('fs-extra');
const path = require('path');
const { v4: uuidv4 } = require('uuid');
const rateLimit = require('express-rate-limit');
const axios = require('axios');
const { TELEGRAM_BOT_TOKEN, EXECUTOR_CHAT_ID, TEST_THREAD_ID } = require('../config');

// --- –ó–ê–ì–õ–£–®–ö–ê: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CDEK –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
// const { validatePickupPoint } = require('../utils/cdek'); 

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const ORDERS_JSON = path.join(__dirname, '../data/orders.json');
const PRODUCTS_JSON = path.join(__dirname, '../data/products.json');

// --- Rate Limiting ---
const orderLimiter = rateLimit({
  windowMs: 60 * 1000,
  max: 5,
  message: { error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–∫–∞–∑–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.' },
  standardHeaders: true,
  legacyHeaders: false
});

// --- –ó–ê–ì–õ–£–®–ö–ê: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CDEK –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
async function validatePickupPointStub(code) {
  console.log('‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ CDEK. –ö–æ–¥ –ü–í–ó:', code);

  // --- –ó–ê–ì–õ–£–®–ö–ê: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CDEK –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
  return {
    code: code || '117321',
    address: `–ü—Ä–æ—Ñ—Å–æ—é–∑–Ω–∞—è —É–ª–∏—Ü–∞, 152–∫1`,
    city: '–ú–æ—Å–∫–≤–∞',
    postal_code: '117321',
    name: `–ü–í–ó ${code || '117321'}`,
    work_time: '–ø–Ω-–ø—Ç 10:00-20:00, —Å–±-–≤—Å 10:00-18:00',
    phone: '+7 (999) 999-99-99'
  };
}

// --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram ---
async function sendTelegramNotification(order) {
  if (!TELEGRAM_BOT_TOKEN || !EXECUTOR_CHAT_ID) {
    console.log('‚ö†Ô∏è  Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ configured, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
    return;
  }

  try {
    const customerItems = (order.items || [])
      .map(i => `- ${i.name} √ó${i.qty} ‚Äî ${i.price * i.qty} ‚ÇΩ`)
      .join('\n');

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞–¥—Ä–µ—Å –ü–í–ó —Å –≥–æ—Ä–æ–¥–æ–º –∏ –∏–Ω–¥–µ–∫—Å–æ–º
    let pickupAddress = '';
    if (order.pickup_point) {
      const { address, city, postal_code } = order.pickup_point;
      pickupAddress = `${address}${city ? ', ' + city : ''}${postal_code ? ', ' + postal_code : ''}`;
    } else {
      pickupAddress = '–ù–µ —É–∫–∞–∑–∞–Ω';
    }

    const notifyMsg = `
üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω!
üë§ –§–ò–û: ${order.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}
üìç –ü–í–ó: ${pickupAddress}
üîó Telegram: ${order.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üÜî User ID: ${order.user_id}

üì¶ –¢–æ–≤–∞—Ä—ã:
${customerItems || '‚Äî'}

üí∞ –°—É–º–º–∞: ${order.total} ‚ÇΩ
üí≥ –û–ø–ª–∞—Ç–∞: ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)
üìã –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${order.id}
    `.trim();

    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: EXECUTOR_CHAT_ID,
      message_thread_id: TEST_THREAD_ID ? Number(TEST_THREAD_ID) : undefined,
      text: notifyMsg
    });

    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:', error.message);
  }
}

// --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—é ---
async function notifyCustomer(user_id, orderId, amount) {
  if (!TELEGRAM_BOT_TOKEN) return;

  try {
    const message = `
‚úÖ –í–∞—à –∑–∞–∫–∞–∑ #${orderId} —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!
üí∞ –°—É–º–º–∞: ${amount} —Ä—É–±.
üì¶ –°—Ç–∞—Ç—É—Å: –ü–µ—Ä–µ–¥–∞–Ω –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! üõçÔ∏è
    `.trim();

    await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: user_id,
      text: message
    });

    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—é:', error.message);
  }
}

// --- POST /api/create-order ---
router.post('/', orderLimiter, async (req, res) => {
  try {
    const { user_id, username, name, phone, pickup_point, items } = req.body;

    // --- –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
    if (!user_id || typeof user_id !== 'string') {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id' });
    }
    if (!name || typeof name !== 'string' || name.length > 100) {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è' });
    }
    if (!phone || !/^\+?\d{10,15}$/.test(phone)) {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω' });
    }

    // --- –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ ---
    if (!Array.isArray(items) || items.length === 0 || items.length > 50) {
      return res.status(400).json({ error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤' });
    }

    // --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ü–í–ó —á–µ—Ä–µ–∑ CDEK ---
    // --- –ó–ê–ì–õ–£–®–ö–ê: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CDEK –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
    // if (!pickup_point?.code) {
    //   return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω –∫–æ–¥ –ü–í–ó' });
    // }

    // const normalizedPickupPoint = await validatePickupPoint(pickup_point.code);
    // if (!normalizedPickupPoint) {
    //   return res.status(400).json({ error: '–ü–í–ó –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ CDEK' });
    // }

    // --- –ó–ê–ì–õ–£–®–ö–ê: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CDEK –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
    const normalizedPickupPoint = await validatePickupPointStub(pickup_point?.code);

    // --- –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ ---
    let products = [];
    if (await fs.exists(PRODUCTS_JSON)) {
      try {
        const raw = await fs.readFile(PRODUCTS_JSON, 'utf-8');
        products = raw.trim() ? JSON.parse(raw) : [];
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:', products.length);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è products.json:', error.message);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –µ—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
        products = [
          {
            id: "1",
            name: "–†–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–æ–≤–∞—Ä 1",
            price: 1000
          },
          {
            id: "2",
            name: "–†–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–æ–≤–∞—Ä 2", 
            price: 2000
          }
        ];
      }
    } else {
      console.log('‚ö†Ô∏è  –§–∞–π–ª products.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
      products = [
        {
          id: "1",
          name: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 1",
          price: 1000
        },
        {
          id: "2",
          name: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 2", 
          price: 2000
        }
      ];
    }

    // --- –ü–µ—Ä–µ—Å—á—ë—Ç –∫–æ—Ä–∑–∏–Ω—ã ---
    let recalculatedItems = [];
    let total = 0;

    for (const clientItem of items) {
      const product = products.find(p => p.id === clientItem.id);
      if (!product) {
        return res.status(400).json({ error: `–¢–æ–≤–∞—Ä —Å id=${clientItem.id} –Ω–µ –Ω–∞–π–¥–µ–Ω` });
      }

      let qty = Number(clientItem.qty) || 1;
      if (qty < 1) qty = 1;
      if (qty > 100) qty = 100;

      const subtotal = product.price * qty;

      recalculatedItems.push({
        id: product.id,
        name: product.name,
        price: product.price,
        qty,
        subtotal
      });

      total += subtotal;
    }

    // --- –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–∫–∞–∑ ---
    const newOrder = {
      id: uuidv4(),
      user_id,
      username,
      name,
      phone,
      pickup_point: normalizedPickupPoint, // —É–∂–µ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
      items: recalculatedItems,
      total,
      paid: false,
      created_at: new Date().toISOString()
    };

    // --- –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã ---
    let orders = [];
    if (await fs.exists(ORDERS_JSON)) {
      try {
        const raw = await fs.readFile(ORDERS_JSON, 'utf-8');
        orders = raw.trim() ? JSON.parse(raw) : [];
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è orders.json:', error.message);
        orders = [];
      }
    }

    // --- –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ ---
    orders.push(newOrder);
    await fs.writeJSON(ORDERS_JSON, orders, { spaces: 2 });

    // --- –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã ---
    const fakePaymentLink = `http://localhost:3000/api/create-order/mock-payment/${newOrder.id}?amount=${total}`;

    res.json({
      success: true,
      order: {
        id: newOrder.id,
        total: newOrder.total,
        items: newOrder.items,
        pickup_point: newOrder.pickup_point
      },
      payment: {
        url: fakePaymentLink,
        provider: 'yookassa (test mode)'
      },
      message: '‚úÖ –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –µ–≥–æ –æ–ø–ª–∞—Ç—ã.'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error.message);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑' });
  }
});

// --- –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –æ–ø–ª–∞—Ç—ã ---
router.get('/mock-payment/:orderId', async (req, res) => {
  try {
    const { orderId } = req.params;
    const { amount } = req.query;

    console.log('‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞:', orderId, '–°—É–º–º–∞:', amount);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
    let orders = [];
    if (await fs.exists(ORDERS_JSON)) {
      try {
        const raw = await fs.readFile(ORDERS_JSON, 'utf-8');
        orders = raw.trim() ? JSON.parse(raw) : [];
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è orders.json:', error.message);
        orders = [];
      }
    }

    const orderIndex = orders.findIndex(o => o.id === orderId);
    if (orderIndex !== -1) {
      orders[orderIndex].paid = true;
      orders[orderIndex].payment_info = {
        provider: 'test_payment',
        amount: parseFloat(amount) || 0,
        paid_at: new Date().toISOString()
      };
      
      try {
        await fs.writeJSON(ORDERS_JSON, orders, { spaces: 2 });
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: –æ–ø–ª–∞—á–µ–Ω–æ');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        await sendTelegramNotification(orders[orderIndex]);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
        await notifyCustomer(orders[orderIndex].user_id, orderId, amount);
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ orders.json:', error.message);
      }
    } else {
      console.log('‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω:', orderId);
    }

    res.send(`
      <html>
        <head>
          <title>‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞</title>
          <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            .success { color: green; font-size: 24px; }
            .info { margin: 20px 0; }
          </style>
        </head>
        <body>
          <h1 class="success">‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</h1>
          <div class="info">
            <p><strong>–ó–∞–∫–∞–∑ #:</strong> ${orderId}</p>
            <p><strong>–°—É–º–º–∞:</strong> ${amount} —Ä—É–±.</p>
          </div>
          <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–ø–ª–∞—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.</p>
          <p>–ó–∞–∫–∞–∑ –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ "–û–ø–ª–∞—á–µ–Ω" –≤ —Å–∏—Å—Ç–µ–º–µ.</p>
          <p>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram.</p>
        </body>
      </html>
    `);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–π –æ–ø–ª–∞—Ç—ã:', error);
    res.status(500).send(`
      <html>
        <body>
          <h1 style="color: red;">‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã</h1>
          <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–ø–ª–∞—Ç—ã.</p>
        </body>
      </html>
    `);
  }
});

module.exports = router;